[["index.html", "scAML Project 1 Figure 1 1.1 (b) UMAP distribution across AML 1.2 (c) Dotplot of marker genes 1.3 (d) Bar charts 1.4 (e) Distribution of fusion positive cells 1.5 (f) Scatter plots", " scAML Project Niu Qiao 2024-10-30 1 Figure 1 Fig.1 | scRNA-seq profiling and detection of fusion gene transcripts in AMLs expressing RUNX1::RUNX1T1, PML::RARA, or CBFB::MYH11. a, Schematics of the study design. b, Top panel: UMAP visualization of nine broad cell types from various AML subtypes. Colors indicate major cell types (annotation level 1: annoL1). Bottom panel: UMAP visualization of cells expressing RUNX1::RUNX1T1, PML::RARA, or CBFB::MYH11, where red and grey dots indicate fusion transcript-positive and fusion transcript undetected cells, respectively. The total number of cells for each AML subtype is indicated at the top. c, Normalized expression profiles of representative marker genes for cell type annotation: Blasts (CD34, PROM1), Proliferating blasts (MKI67), BaEoMa (HDC, TPSAB1), monocytes (LYZ, CD14), cDC (CD1C), pDC (BLNK), T/NK cells (CD3D, GNLY), B cells (EBF1, CD79A), Erythroid cells (HBB, CA1). d, Fractions of annotated cell types (annoL1) in t(8;21), t(15:17), and inv(16) AML subtypes. Averaged fractions per AML subtype are shown at the left. Fractions for individual AML patients are shown at right. Cell types were color-coded based on annotations from panel b. e, Percentage of fusion transcript-positive cells in each major cell type of t(8;21) (left), t(15;17) (middle), and inv(16) (right) AML subtypes. Cell types were color-coded based on annotations from panel b. f, Scatter plots comparing cell type composition of fusion transcript-positive cells vs. all BMMCs for t(8;21) (left), t(15;17) (middle), and inv(16) (right) AML subtypes. Spearman correlation coefficients and P-values are shown. Cell types were color-coded based on annotations from panel b. Each point represents a different cell type within an AML sample, with circles denoting t(8;21), triangles representing t(15;17), and squares indicating inv(16) AML subtypes, respectively. g, Representative fluorescent confocal images from DNA-FISH experiments. Dual gene probes were used for the detection of RUNX1::RUNX1T1 and CBFB::MYH11 (yellow arrowheads indicate fusion genes). Split gene probes were used for the detection of PML::RARA (white arrowheads indicate the splitting of two portions of the RARA gene). Leukemic blasts and T-like cells were sorted by the following FACS strategy: Lin-CD34+CD117+ for t(8;21)’s and inv(16)’s blasts, Lin-CD34-CD117+ for t(15;17)’s blast; CD3E+ for T lymphocytes for all three AML subtypes. 1.1 (b) UMAP distribution across AML anno_color &lt;- c(&quot;#73C8B4&quot;, &quot;#E31A1C&quot;, &quot;#A65628&quot;, &quot;#FDBF6F&quot;, &quot;#9970AB&quot;, &quot;#C2A5CF&quot;, &quot;#6BAED6&quot;, &quot;#33A02C&quot;, &quot;#FB8072&quot;) anno_name &lt;- c(&quot;Progs&quot;, &quot;Progs_Prolif&quot;, &quot;Progs_BaEoMa&quot;, &quot;Mono&quot;, &quot;cDC&quot;, &quot;pDC&quot;, &quot;T.NK&quot;, &quot;B&quot;, &quot;Erythroid&quot;) names(anno_color) &lt;- anno_name scAE.anno &lt;- read_rds(paste0(in_dir, &quot;Table1.3.scAE_harmony.anno.rds&quot;)) scAPL.anno &lt;- read_rds(paste0(in_dir, &quot;Table1.3.scAPL_harmony.anno.rds&quot;)) scCM.anno &lt;- read_rds(paste0(in_dir, &quot;Table1.3.scCM_harmony.anno.rds&quot;)) ## visualization p1_1 &lt;- DimPlot(scAE.anno, reduction = &quot;umap&quot;, group.by = &quot;annoL1&quot;, label = F, repel = F, raster = T, cols = anno_color, pt.size = 0.4) + labs(title = &quot;M2&quot;) p2_1 &lt;- DimPlot(scAPL.anno, reduction = &quot;umap&quot;, group.by = &quot;annoL1&quot;, label = F, repel = F, raster = T, cols = anno_color, pt.size = 0.4) + labs(title = &quot;M3&quot;) p3_1 &lt;- DimPlot(scCM.anno, reduction = &quot;umap&quot;, group.by = &quot;annoL1&quot;, label = F, repel = F, raster = T, cols = anno_color, pt.size = 0.4) + labs(title = &quot;M4&quot;) p1_2 &lt;- DimPlot(scAE.anno, reduction = &quot;umap&quot;, group.by = &quot;fus_group&quot;, label = F, repel = T, order = T, raster = T, pt.size = 0.01, na.value = &quot;#D9D9D9&quot;, cols = c(&quot;#E41A1C&quot;, &quot;#D9D9D9&quot;)) + labs(title = &quot;M2&quot;) p2_2 &lt;- DimPlot(scAPL.anno, reduction = &quot;umap&quot;, group.by = &quot;fus_group&quot;, label = F, repel = T, order = T, raster = T, pt.size = 0.01, na.value = &quot;#D9D9D9&quot;, cols = c(&quot;#E41A1C&quot;, &quot;#D9D9D9&quot;)) + labs(title = &quot;M3&quot;) p3_2 &lt;- DimPlot(scCM.anno, reduction = &quot;umap&quot;, group.by = &quot;fus_group&quot;, label = F, repel = T, order = T, raster = T, pt.size = 0.01, na.value = &quot;#D9D9D9&quot;, cols = c(&quot;#E41A1C&quot;, &quot;#D9D9D9&quot;)) + labs(title = &quot;M4&quot;) pdf(paste0(out_dir, &quot;Fig1b.pdf&quot;), width = 9, height = 5) p1_1 + p2_1 + p3_1 + p1_2 + p2_2 + p3_2 + plot_layout(ncol = 3, guides = &quot;collect&quot;) dev.off() 1.2 (c) Dotplot of marker genes idx1 &lt;- c(&quot;CD34&quot;, &quot;CD38&quot;, &quot;PROM1&quot;, &quot;KIT&quot;, &quot;IGFBP2&quot;, &quot;HDC&quot;, &quot;TPSAB1&quot;, &quot;LYZ&quot;, &quot;CD14&quot;, &quot;CD1C&quot;, &quot;IRF8&quot;, &quot;BLNK&quot;, &quot;CD3D&quot;, &quot;GNLY&quot;, &quot;EBF1&quot;, &quot;CD79A&quot;, &quot;HBB&quot;, &quot;CA1&quot;, &quot;MKI67&quot;) p1_b &lt;- DotPlot(object = scAE.anno, assay = &quot;RNA&quot;, features = idx1) p2_b &lt;- DotPlot(object = scAPL.anno, assay = &quot;RNA&quot;, features = idx1) p3_b &lt;- DotPlot(object = scCM.anno, assay = &quot;RNA&quot;, features = idx1) df &lt;- rbind( p1_b$data %&gt;% mutate(FAB = &quot;M2AE&quot;), p2_b$data %&gt;% mutate(FAB = &quot;M3PR&quot;), p3_b$data %&gt;% mutate(FAB = &quot;M4CM&quot;) ) %&gt;% mutate(id = factor(id, levels = anno_name)) pdf(paste0(out_dir, &quot;Fig1c.pdf&quot;), width = 8.5, height = 4.5) df %&gt;% ggplot() + geom_point(aes(x = FAB, y = features.plot, color = avg.exp.scaled, size = pct.exp)) + facet_grid(~ id, scales = &quot;free_x&quot;, space = &quot;free&quot;) + scale_color_gradient2(midpoint = 0, low = &quot;white&quot;, mid = &quot;white&quot;, high = &quot;red&quot;) + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_discrete(limits = rev) dev.off() 1.3 (d) Bar charts df_a1 &lt;- rbind(scAE.anno@meta.data %&gt;% group_by(seurat_clusters) %&gt;% summarise(N = n()) %&gt;% mutate(Freq = (N/sum(N)), orig.ident = &quot;Merged&quot;) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M2AE&quot;), scAPL.anno@meta.data %&gt;% group_by(seurat_clusters) %&gt;% summarise(N = n()) %&gt;% mutate(Freq = (N/sum(N)), orig.ident = &quot;Merged&quot;) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M3PR&quot;), scCM.anno@meta.data %&gt;% group_by(seurat_clusters) %&gt;% summarise(N = n()) %&gt;% mutate(Freq = (N/sum(N)), orig.ident = &quot;Merged&quot;) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M4CM&quot;)) df_a2 &lt;- rbind(scAE.anno@meta.data %&gt;% group_by(orig.ident, seurat_clusters) %&gt;% summarise(N = n()) %&gt;% group_by(orig.ident) %&gt;% mutate(Freq = (N/sum(N))) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M2AE&quot;), scAPL.anno@meta.data %&gt;% group_by(orig.ident, seurat_clusters) %&gt;% summarise(N = n()) %&gt;% group_by(orig.ident) %&gt;% mutate(Freq = (N/sum(N))) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M3PR&quot;), scCM.anno@meta.data %&gt;% group_by(orig.ident, seurat_clusters) %&gt;% summarise(N = n()) %&gt;% group_by(orig.ident) %&gt;% mutate(Freq = (N/sum(N))) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M4CM&quot;)) %&gt;% mutate(orig.ident = factor(orig.ident, levels = s_list)) p_a1 &lt;- ggplot(df_a1, aes(x = FAB, y = Freq, fill = seurat_clusters)) + geom_col(width = 0.8) + scale_y_continuous(labels = scales::percent) + theme_bw() + scale_fill_manual(values = anno_color) + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) + labs(y = &quot;Cell Proportions&quot;) p_a2 &lt;- ggplot(df_a2, aes(x = orig.ident, y = Freq, fill = seurat_clusters)) + geom_col(width = 0.8) + scale_y_continuous(labels = scales::percent) + theme_bw() + scale_fill_manual(values = anno_color) + facet_grid(~ FAB, scales = &quot;free_x&quot;, space = &quot;free&quot;) + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) + labs(y = &quot;Cell Proportions&quot;) pdf(paste0(out_dir, &quot;Fig1d.pdf&quot;), width = 8, height = 3.5) p_a1 + p_a2 + plot_layout(ncol = 2, widths = c(0.35, 2.4), guides = &quot;collect&quot;) dev.off() 1.4 (e) Distribution of fusion positive cells df1 &lt;- rbind(scAE.anno@meta.data %&gt;% group_by(seurat_clusters, fus_group) %&gt;% summarise(N = n()) %&gt;% mutate(Freq = (N/sum(N)), orig.ident = &quot;Merged&quot;) %&gt;% filter(!is.na(fus_group)) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M2AE&quot;), scAPL.anno@meta.data %&gt;% group_by(seurat_clusters, fus_group) %&gt;% summarise(N = n()) %&gt;% mutate(Freq = (N/sum(N)), orig.ident = &quot;Merged&quot;) %&gt;% filter(!is.na(fus_group)) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M3PR&quot;), scCM.anno@meta.data %&gt;% group_by(seurat_clusters, fus_group) %&gt;% summarise(N = n()) %&gt;% mutate(Freq = (N/sum(N)), orig.ident = &quot;Merged&quot;) %&gt;% filter(!is.na(fus_group)) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M4CM&quot;)) %&gt;% mutate(seurat_clusters = factor(seurat_clusters, levels = anno_name)) p1 &lt;- ggplot(df1, aes(x = seurat_clusters, y = Freq, fill = seurat_clusters)) + geom_col(width = 0.65) + geom_text(aes(label = scales::percent(Freq, accuracy = .1)), position = &quot;stack&quot;, vjust = 1, size = 3) + scale_y_continuous(labels = scales::percent) + theme_bw() + scale_fill_manual(values = anno_color) + facet_grid(~ FAB, scales = &quot;free_x&quot;, space = &quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.title.x = element_blank(), legend.position = &quot;none&quot;) + scale_y_continuous(labels = percent_format(), limits = c(0, 1)) + labs(y = &quot;Fus Proportions in Each Cluster&quot;) pdf(paste0(out_dir, &quot;Fig1e.pdf&quot;), width = 6, height = 4) p1 dev.off() 1.5 (f) Scatter plots df4 &lt;- rbind(scAE.anno@meta.data %&gt;% group_by(orig.ident, seurat_clusters, fus_group) %&gt;% summarise(N = n()) %&gt;% filter(!is.na(fus_group)) %&gt;% group_by(orig.ident) %&gt;% mutate(Freq = (N/sum(N))) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M2AE&quot;), scAPL.anno@meta.data %&gt;% group_by(orig.ident, seurat_clusters, fus_group) %&gt;% summarise(N = n()) %&gt;% filter(!is.na(fus_group)) %&gt;% group_by(orig.ident) %&gt;% mutate(Freq = (N/sum(N))) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M3PR&quot;), scCM.anno@meta.data %&gt;% group_by(orig.ident, seurat_clusters, fus_group) %&gt;% summarise(N = n()) %&gt;% filter(!is.na(fus_group)) %&gt;% group_by(orig.ident) %&gt;% mutate(Freq = (N/sum(N))) %&gt;% dplyr::select(orig.ident, seurat_clusters, N, Freq) %&gt;% mutate(FAB = &quot;M4CM&quot;)) %&gt;% mutate(orig.ident = factor(orig.ident, levels = s_list)) df_merge &lt;- df_a2 %&gt;% left_join(., df4, by = c(&quot;orig.ident&quot; = &quot;orig.ident&quot;, &quot;seurat_clusters&quot; = &quot;seurat_clusters&quot;, &quot;FAB&quot; = &quot;FAB&quot;)) pdf(paste0(out_dir, &quot;Fig1f.pdf&quot;), width = 6.5, height = 3.8) ggplot(df_merge, aes(Freq.x, Freq.y)) + geom_point(aes(color = seurat_clusters, shape = FAB), size = 2) + facet_wrap(~ FAB) + scale_color_manual(values = anno_color) + geom_abline(slope = 1) + ggpubr::stat_cor(method = &quot;spearman&quot;, label.x = 0, label.y = .75) + scale_x_continuous(labels = scales::percent, limits = c(0, 0.8)) + scale_y_continuous(labels = scales::percent, limits = c(0, 0.8)) + labs(x = &quot;Cell Proportions&quot;, y = &quot;Fus+ Proportions&quot;) + theme_bw() + theme(legend.key.size = unit(0.4, &quot;cm&quot;), legend.position = &quot;bottom&quot;) dev.off() "],["figure-2.html", "2 Figure 2 2.1 (b) UMAP of HC 2.2 (c) UMAP distribution across AML 2.3 (d) Bar charts 2.4 (e) Fusion distribution 2.5 (f) Pseudotime UMAP 2.6 (g) Ridge plot of pseudotime 2.7 (h) Dot plots of signature scores", " 2 Figure 2 Fig.2 | Differentiation hierarchies of leukemic blasts across different AML subtypes. a, Illustration of merged analysis of immature-like cells in AML BM samples, utilizing 6 publicly available FACS-sorted CD34+ BMMCs as healthy controls (HC). b, UMAP visualization of public CD34+ HC cells, with colors indicating Azimuth level 2 annotations of hematopoietic cell types. The total number of sequenced cells is indicated in the bottom-left corner. c, UMAP facet visualizations of immature-like cell types from t(8;21, t(15;17), and inv(16) AML BMs, with colors indicating semi-supervised leukemia cell type annotation level 2 (annoL2). Grey indicates healthy CD34+ HC cells. The total number of sequenced cells for each AML subtype is indicated in the bottom-left corner. d, Bar charts depicting the relative fractions of 11 annotated cell types (annoL2) in different AML subtypes and HC groups. The left panel shows the average fractions for each AML subtype and the HC group, while the other panels present the fractions for individual samples. e, UMAP visualization showing the distribution of fusion transcripts: RUNX1::RUNX1T1 (red), PML::RARA (green), and CBFB::MYH11 (blue). Grey indicates the cells wherein no fusion transcripts were detected. f, UMAP visualization of monocle3-pseudotime scores. g, Distribution of 11 different cell types along the pseudotime score axis. h, Dot plots of signature scores for gene sets characterizing relevant biological processes across 11 different hematopoietic cell types in AML subtypes and HC groups. 2.1 (b) UMAP of HC scAML.prog.anno &lt;- read_rds(paste0(in_dir, &quot;Table1.3.scAML.prog_harmony.anno.rds&quot;)) p2 &lt;- DimPlot(scAML.prog.anno, reduction = &quot;umap&quot;, group.by = &quot;predicted.celltype.l2&quot;, split.by = &quot;FAB&quot;, pt.size = 1, label = F, repel = T, raster = T, cols = pcol_2) pdf(paste0(out_dir, &quot;Fig2b.pdf&quot;), width = 20, height = 9) p1 + p2 dev.off() 2.2 (c) UMAP distribution across AML anno_color &lt;- c(&quot;#E31A1C&quot;, &quot;#86C2E2&quot;, &quot;#33A02C&quot;, &quot;#1F78B4&quot;, &quot;#A65628&quot;, &quot;#B2DF8A&quot;, &quot;#7570B3&quot;, &quot;#73C8B4&quot;, &quot;#F1B6DA&quot;, &quot;#FB8072&quot;, &quot;#D95F02&quot;) anno_name &lt;- c(&quot;HSC.MPP-like&quot;, &quot;LMPP-like&quot;, &quot;CLP-like&quot;, &quot;GMP-like&quot;, &quot;BaEoMa-like&quot;, &quot;Progs-Prolif&quot;, &quot;NPW-high&quot;, &quot;LSC17-high&quot;, &quot;Pre-DC&quot;, &quot;Erythroid&quot;, &quot;Pre-B&quot;) anno_color2 &lt;- c(&quot;HC_CD34&quot; = &quot;#D9D9D9&quot;, anno_color) scAML.sub1 &lt;- scAML.prog.anno %&gt;% subset(FAB %in% c(&quot;M2AE&quot;, &quot;HC_CD34&quot;)) scAML.sub1@meta.data &lt;- scAML.sub1@meta.data %&gt;% mutate(annoL2 = as.character(annoL2), annoL2 = ifelse(FAB %in% &quot;HC_CD34&quot;, &quot;HC_CD34&quot;, annoL2), annoL2 = factor(annoL2, levels = names(anno_color2)[c(1:2, 4:5, 3, 6:7, 10:12, 9, 8)])) p1 &lt;- DimPlot(scAML.sub1, reduction = &quot;umap&quot;, group.by = &quot;annoL2&quot;, cols = anno_color2, order = T, label = F, repel = T, raster = T, pt.size = 0.5) + labs(title = &quot;M2&quot;) scAML.sub2 &lt;- scAML.prog.anno %&gt;% subset(FAB %in% c(&quot;M3PR&quot;, &quot;HC_CD34&quot;)) scAML.sub2@meta.data &lt;- scAML.sub2@meta.data %&gt;% mutate(annoL2 = as.character(annoL2), annoL2 = ifelse(FAB %in% &quot;HC_CD34&quot;, &quot;HC_CD34&quot;, annoL2), annoL2 = factor(annoL2, levels = names(anno_color2)[c(1:2, 4, 6:12, 5, 3)])) p2 &lt;- DimPlot(scAML.sub2, reduction = &quot;umap&quot;, group.by = &quot;annoL2&quot;, cols = anno_color2, order = T, label = F, repel = T, raster = T, pt.size = 0.5) + labs(title = &quot;M3&quot;) scAML.sub3 &lt;- scAML.prog.anno %&gt;% subset(FAB %in% c(&quot;M4CM&quot;, &quot;HC_CD34&quot;)) scAML.sub3@meta.data &lt;- scAML.sub3@meta.data %&gt;% mutate(annoL2 = as.character(annoL2), annoL2 = ifelse(FAB %in% &quot;HC_CD34&quot;, &quot;HC_CD34&quot;, annoL2), annoL2 = factor(annoL2, levels = names(anno_color2)[c(1:2, 4:7, 10:12, 3, 8:9)])) p3 &lt;- DimPlot(scAML.sub3, reduction = &quot;umap&quot;, group.by = &quot;annoL2&quot;, cols = anno_color2, order = T, label = F, repel = T, raster = T, pt.size = 0.5) + labs(title = &quot;M4&quot;) pdf(paste0(out_dir, &quot;Fig2c.pdf&quot;), width = 13, height = 4) p1 + p2 + p3 + plot_layout(ncol = 3, guides = &quot;collect&quot;) dev.off() 2.3 (d) Bar charts p1 &lt;- plot_stat(scAML.prog.anno, plot_type = &quot;prop_fill&quot;, group_by = &quot;FAB&quot;, pal_setup = anno_color) + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) p2 &lt;- plot_stat(scAML.prog.anno, plot_type = &quot;prop_fill&quot;, group_by = &quot;orig.ident&quot;, pal_setup = anno_color) + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) pdf(paste0(out_dir, &quot;Fig2d.pdf&quot;), width = 9, height = 4) p1 + p2 + plot_layout(ncol = 2, widths = c(0.45, 3), guides = &quot;collect&quot;) dev.off() 2.4 (e) Fusion distribution df &lt;- scAML.prog.anno@meta.data %&gt;% mutate(fus_group2 = case_when( (fus_group == &quot;Positive&quot; &amp; FAB == &quot;M2AE&quot;) ~ &quot;M2AE&quot;, (fus_group == &quot;Positive&quot; &amp; FAB == &quot;M3PR&quot;) ~ &quot;M3PR&quot;, (fus_group == &quot;Positive&quot; &amp; FAB == &quot;M4CM&quot;) ~ &quot;M4CM&quot;, is.na(fus_group) ~ &quot;ANA&quot;)) %&gt;% rownames_to_column(&quot;ID&quot;) %&gt;% left_join(., scAML.prog.anno@reductions$umap@cell.embeddings %&gt;% data.frame() %&gt;% rownames_to_column(&quot;ID&quot;)) %&gt;% column_to_rownames(&quot;ID&quot;) df1 &lt;- df %&gt;% filter(is.na(fus_group)) df2 &lt;- df %&gt;% filter(!is.na(fus_group)) %&gt;% sample_n(nrow(.)) pdf(paste0(out_dir, &quot;Fig2e.pdf&quot;), width = 4.7, height = 3.5) rbind(df1, df2) %&gt;% mutate(mysize = ifelse(is.na(fus_group), 1, 3)) %&gt;% ggplot() + ggrastr::rasterise(geom_point(aes_string(x = &quot;umap_1&quot;, y = &quot;umap_2&quot;, color = &quot;fus_group2&quot;, size = &quot;mysize&quot;), stroke = 0, alpha = 1), dpi = 300) + scale_color_manual(values = c(&quot;#D9D9D9&quot;, &quot;#F8766D&quot;, &quot;#00BA38&quot;, &quot;#619CFF&quot;)) + scale_size_continuous(range = c(0.05, 0.3)) + ggthemes::theme_few() dev.off() 2.5 (f) Pseudotime UMAP cds &lt;- read_rds(paste0(in_dir, &quot;Table1.4.scAML.prog_harmony.anno.monocle3.rds&quot;)) scAML.prog.anno &lt;- AddMetaData(object = scAML.prog.anno, metadata = cds@principal_graph_aux@listData$UMAP$pseudotime, col.name = &quot;pseudotime&quot;) pdf(paste0(out_dir, &quot;Fig2f.pdf&quot;), width = 4, height = 3.5) FeaturePlot(scAML.prog.anno, features = &quot;pseudotime&quot;, pt.size = 0.4, order = T, reduction = &quot;umap&quot;, raster = T) &amp; scale_color_viridis_c() dev.off() 2.6 (g) Ridge plot of pseudotime df &lt;- scAML.prog.anno@meta.data %&gt;% rownames_to_column(&quot;ID&quot;) %&gt;% left_join(., scAML.prog.anno@reductions$umap@cell.embeddings %&gt;% data.frame() %&gt;% rownames_to_column(&quot;ID&quot;)) %&gt;% column_to_rownames(&quot;ID&quot;) pdf(paste0(out_dir, &quot;Fig2g.pdf&quot;), width = 6, height = 4, useDingbats = F) ggplot(df, aes(x = pseudotime, y = annoL2, fill = stat(x))) + ggridges::geom_density_ridges_gradient(scale = 1.2) + scale_fill_gradientn(name=&quot;Pseudotime&quot;, colors = colorRampPalette(rev(brewer.pal(10, &quot;Spectral&quot;)))(99)) + scale_y_discrete(limits = rev) + theme_minimal() + theme(panel.grid = element_blank()) dev.off() 2.7 (h) Dot plots of signature scores idx_feature = rev(colnames(scAML.prog.anno@meta.data)[c(25:37, 40:58)]) p &lt;- DotPlot(object = scAML.prog.anno, assay = &quot;RNA&quot;, features = idx_feature, cols = &quot;RdYlBu&quot;, group.by = &quot;FAB&quot;, split.by = &quot;annoL2&quot;) + geom_point(aes(size = pct.exp), shape = 21, stroke = 0.2) + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + coord_flip() #### anno_name &lt;- c(&quot;HSC.MPP-like&quot;, &quot;LMPP-like&quot;, &quot;CLP-like&quot;, &quot;GMP-like&quot;, &quot;BaEoMa-like&quot;, &quot;Progs-Prolif&quot;, &quot;NPW-high&quot;, &quot;LSC17-high&quot;, &quot;Pre-DC&quot;, &quot;Erythroid&quot;, &quot;Pre-B&quot;) df_raw &lt;- p$data %&gt;% mutate(FAB = str_extract(id, &quot;M2AE|M3PR|M4CM|HC_CD34&quot;), annoL2 = str_replace_all(id, &quot;M2AE_|M3PR_|M4CM_|HC_CD34_&quot;, &quot;&quot;)) %&gt;% mutate(FAB = factor(FAB, levels = c(&quot;M2AE&quot;, &quot;M3PR&quot;, &quot;M4CM&quot;, &quot;HC_CD34&quot;)), annoL2 = factor(annoL2, levels = anno_name)) p1 &lt;- df_raw %&gt;% group_by(features.plot) %&gt;% mutate(avg.exp.scaled = MinMax(avg.exp.scaled, -1.5, 1.5)) %&gt;% ggplot() + geom_point(aes(x = id, y = features.plot, fill = avg.exp.scaled, size = pct.exp), shape = 21, stroke = 0) + facet_grid(~FAB, scales = &quot;free&quot;, space = &quot;free&quot;) + scale_fill_distiller(palette =&quot;RdYlBu&quot;) + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_radius(range = c(0, 6)) pdf(paste0(out_dir, &quot;Fig2h.pdf&quot;), width = 12, height = 9) p1 dev.off() "],["figure-3.html", "3 Figure 3 3.1 (b) UMAP distribution 3.2 (c) Fusion distribution 3.3 (d) Bar charts 3.4 (e) Dot plots of signature scores", " 3 Figure 3 Fig.3 | Transcriptional aberrations in differentiated mature-like cells. a, Illustration of merged analysis of mature-like cells from AML BMs, using mature cells from 8 healthy BM samples as controls. b, UMAP visualization of de novo clustering of mature-like cells from t(8;21)/t(15;17)/inv(16) AML and HC samples. The total number of sequenced cells is indicated in the bottom-right corner. c, UMAP visualization showing the distribution of fusion transcripts: RUNX1::RUNX1T1 (red), PML::RARA (green), and CBFB::MYH11 (blue). Grey indicates the cells wherein no fusion transcripts were detectable. d, Bar charts depicting the relative fractions of 16 annotated cell types (annoL2) in different AML subtypes and HC groups. The left panel shows the average fractions for each AML subtype and the HC group, while the other panels present the fractions for individual samples. e, Dot plots showing signature scores for gene sets representing distinct hematopoietic cell types, based on Azimuth BM cell type annotation level 2. 3.1 (b) UMAP distribution scAML.O.anno &lt;- read_rds(paste0(in_dir, &quot;Table1.3.scAML.O_harmony.anno.rds&quot;)) anno_color.O &lt;- c(&quot;#A6CEE3&quot;, &quot;#1F78B4&quot;, &quot;#FDDAEC&quot;, &quot;#FEE090&quot;, &quot;#7570B3&quot;, &quot;#1B9E77&quot;, &quot;#A1D99B&quot;, &quot;#D95F02&quot;, &quot;#33A02C&quot;, &quot;#FDBF6F&quot;, &quot;#DE77AE&quot;, &quot;#AB47BC&quot;, &quot;#FF77F8&quot;, &quot;#FB8072&quot;, &quot;#73C8B4&quot;, &quot;#C51B7D&quot;, &quot;#D9D9D9&quot;) anno_name.O &lt;- c(&quot;CD4Naive&quot;, &quot;CD8Naive&quot;, &quot;CD4EM&quot;, &quot;CD8EM&quot;, &quot;NK&quot;, &quot;MAIT&quot;, &quot;MatureB&quot;, &quot;PlasmaB&quot;, &quot;CLP-like&quot;, &quot;CD14Mono&quot;, &quot;CD16Mono&quot;, &quot;cDC&quot;, &quot;pDC&quot;, &quot;EarlyE&quot;, &quot;LateE&quot;, &quot;ProgMK&quot;, &quot;LowQual&quot;) names(anno_color.O) &lt;- anno_name.O pdf(paste0(out_dir, &quot;Fig3b.pdf&quot;), width = 6, height = 4.5) DimPlot(scAML.O.anno, reduction = &quot;umap&quot;, group.by = &quot;annoL2&quot;, label = T, repel = T, raster = T, cols = anno_color.O, pt.size = 0.3) dev.off() 3.2 (c) Fusion distribution df &lt;- scAML.O.anno.sub@meta.data %&gt;% mutate(fus_group2 = case_when( (fus_group == &quot;Positive&quot; &amp; FAB == &quot;M2AE&quot;) ~ &quot;M2AE&quot;, (fus_group == &quot;Positive&quot; &amp; FAB == &quot;M3PR&quot;) ~ &quot;M3PR&quot;, (fus_group == &quot;Positive&quot; &amp; FAB == &quot;M4CM&quot;) ~ &quot;M4CM&quot;, is.na(fus_group) ~ &quot;ANA&quot;)) %&gt;% rownames_to_column(&quot;ID&quot;) %&gt;% left_join(., scAML.O.anno.sub@reductions$umap@cell.embeddings %&gt;% data.frame() %&gt;% rownames_to_column(&quot;ID&quot;)) %&gt;% column_to_rownames(&quot;ID&quot;) df1 &lt;- df %&gt;% filter(is.na(fus_group)) df2 &lt;- df %&gt;% filter(!is.na(fus_group)) %&gt;% sample_n(nrow(.)) pdf(paste0(out_dir, &quot;Fig3c.pdf&quot;), width = 5, height = 3.5) rbind(df1, df2) %&gt;% mutate(mysize = ifelse(is.na(fus_group), 1, 3)) %&gt;% ggplot() + ggrastr::rasterise(geom_point(aes_string(x = &quot;umap_1&quot;, y = &quot;umap_2&quot;, color = &quot;fus_group2&quot;, size = &quot;mysize&quot;), stroke = 0, alpha = 1), dpi = 300) + scale_color_manual(values = c(&quot;#D9D9D9&quot;, &quot;#F8766D&quot;, &quot;#00BA38&quot;, &quot;#619CFF&quot;)) + scale_size_continuous(range = c(0.1, 0.5)) + ggthemes::theme_few() dev.off() 3.3 (d) Bar charts p1 &lt;- plot_stat(scAML.O.anno, plot_type = &quot;prop_fill&quot;, group_by = &quot;FAB&quot;, pal_setup = anno_color.O) + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) p2 &lt;- plot_stat(scAML.O.anno, plot_type = &quot;prop_fill&quot;, group_by = &quot;orig.ident&quot;, pal_setup = anno_color.O) + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) pdf(paste0(out_dir, &quot;Fig3d.pdf&quot;), width = 9, height = 4) p1 + p2 + plot_layout(ncol = 2, widths = c(0.45, 3.8), guides = &quot;collect&quot;) dev.off() 3.4 (e) Dot plots of signature scores cd_features &lt;- list( HSC_score = c(&quot;CRHBP&quot;, &quot;AVP&quot;, &quot;MYCT1&quot;, &quot;BEX1&quot;, &quot;NPR3&quot;, &quot;CRYGD&quot;, &quot;MSRB3&quot;, &quot;CD34&quot;, &quot;NPDC1&quot;, &quot;MLLT3&quot;), LMPP_score = c(&quot;AVP&quot;, &quot;CRHBP&quot;, &quot;C1QTNF4&quot;, &quot;BEX1&quot;, &quot;NPR3&quot;, &quot;CD34&quot;, &quot;NPW&quot;, &quot;SMIM24&quot;, &quot;CSF3R&quot;, &quot;NPDC1&quot;), CLP_score = c(&quot;ACY3&quot;, &quot;PRSS2&quot;, &quot;C1QTNF4&quot;, &quot;SPINK2&quot;, &quot;SMIM24&quot;, &quot;NREP&quot;, &quot;CD34&quot;, &quot;DNTT&quot;, &quot;FLT3&quot;, &quot;SPNS3&quot;), EMP_score = c(&quot;MYCT1&quot;, &quot;CRHBP&quot;, &quot;NPR3&quot;, &quot;AVP&quot;, &quot;GATA2&quot;, &quot;HPGDS&quot;, &quot;CYTL1&quot;, &quot;CRYGD&quot;, &quot;IGSF10&quot;, &quot;PBX1&quot;), GMP_score = c(&quot;SERPINB10&quot;, &quot;RNASE3&quot;, &quot;MS4A3&quot;, &quot;PRTN3&quot;, &quot;ELANE&quot;, &quot;AZU1&quot;, &quot;CTSG&quot;, &quot;RNASE2&quot;, &quot;RETN&quot;, &quot;NPW&quot;), BaEoMa_score = c(&quot;HDC&quot;, &quot;MS4A2&quot;, &quot;TPSAB1&quot;, &quot;TPSB2&quot;, &quot;CLC&quot;, &quot;CPA3&quot;, &quot;MS4A3&quot;, &quot;IL1RL1&quot;, &quot;PRG2&quot;, &quot;HPGDS&quot;), Early_Eryth_score = c(&quot;CNRIP1&quot;, &quot;GATA2&quot;, &quot;ITGA2B&quot;, &quot;TFR2&quot;, &quot;GATA1&quot;, &quot;KLF1&quot;, &quot;CYTL1&quot;, &quot;MAP7&quot;, &quot;FSCN1&quot;, &quot;APOC1&quot;), Late_Eryth_score = c(&quot;CTSE&quot;, &quot;TSPO2&quot;, &quot;IFIT1B&quot;, &quot;TMEM56&quot;, &quot;RHCE&quot;, &quot;RHAG&quot;, &quot;SPTA1&quot;, &quot;ADD2&quot;, &quot;EPCAM&quot;, &quot;HBG1&quot;), Prog_Mk_score = c(&quot;CLEC1B&quot;, &quot;SPX&quot;, &quot;WFDC1&quot;, &quot;ANXA3&quot;, &quot;CMTM5&quot;, &quot;SELP&quot;, &quot;RBPMS2&quot;, &quot;ARHGAP6&quot;, &quot;GP9&quot;, &quot;LTBP1&quot;), Platelet_score = c(&quot;RGS18&quot;, &quot;C2orf88&quot;, &quot;TMEM40&quot;, &quot;GP9&quot;, &quot;PF4&quot;, &quot;PPBP&quot;, &quot;DAB2&quot;, &quot;SPARC&quot;, &quot;RUFY1&quot;, &quot;F13A1&quot;), CD14_Mono_score = c(&quot;FOLR3&quot;, &quot;CLEC4E&quot;, &quot;MCEMP1&quot;, &quot;RBP7&quot;, &quot;CDA&quot;, &quot;FPR1&quot;, &quot;CD300E&quot;, &quot;C5AR1&quot;, &quot;CD93&quot;, &quot;APOBEC3A&quot;), CD16_Mono_score = c(&quot;LYPD2&quot;, &quot;VMO1&quot;, &quot;TPPP3&quot;, &quot;C1QA&quot;, &quot;C5AR1&quot;, &quot;CD300E&quot;, &quot;GPBAR1&quot;, &quot;LILRA1&quot;, &quot;HES4&quot;, &quot;APOBEC3A&quot;), pre_mDC_score = c(&quot;ENHO&quot;, &quot;CLEC10A&quot;, &quot;RNASE2&quot;, &quot;PLBD1&quot;, &quot;FCER1A&quot;, &quot;IGSF6&quot;, &quot;MNDA&quot;, &quot;SAMHD1&quot;, &quot;ALDH2&quot;, &quot;PAK1&quot;), pre_pDC_score = c(&quot;SCT&quot;, &quot;SHD&quot;, &quot;LILRA4&quot;, &quot;LILRB4&quot;, &quot;PTPRS&quot;, &quot;TNNI2&quot;, &quot;PLD4&quot;, &quot;SPIB&quot;, &quot;IRF8&quot;, &quot;TNFRSF21&quot;), cDC1_score = c(&quot;IDO1&quot;, &quot;XCR1&quot;, &quot;TACSTD2&quot;, &quot;CLEC9A&quot;, &quot;WFDC21P&quot;, &quot;CLNK&quot;, &quot;CADM1&quot;, &quot;DNASE1L3&quot;, &quot;BATF3&quot;, &quot;LGALS2&quot;), cDC2_score = c(&quot;ENHO&quot;, &quot;CLEC10A&quot;, &quot;CD1C&quot;, &quot;IL13RA1&quot;, &quot;PLBD1&quot;, &quot;LGALS2&quot;, &quot;CD33&quot;, &quot;IGSF6&quot;, &quot;IFI30&quot;, &quot;FCER1A&quot;), pDC_score = c(&quot;ASIP&quot;, &quot;CLEC4C&quot;, &quot;SCAMP5&quot;, &quot;PROC&quot;, &quot;PTCRA&quot;, &quot;SCT&quot;, &quot;SHD&quot;, &quot;PPM1J&quot;, &quot;LILRA4&quot;, &quot;LRRC26&quot;), ASDC_score = c(&quot;AXL&quot;, &quot;SCT&quot;, &quot;LILRA4&quot;, &quot;PPP1R14A&quot;, &quot;TGFBI&quot;, &quot;UPK3A&quot;, &quot;SCN9A&quot;, &quot;CLEC10A&quot;, &quot;PROC&quot;, &quot;PLD4&quot;), Macrophage_score = c(&quot;SPIC&quot;, &quot;FABP3&quot;, &quot;CD5L&quot;, &quot;CCL18&quot;, &quot;C1QC&quot;, &quot;C1QB&quot;, &quot;FABP4&quot;, &quot;C1QA&quot;, &quot;APOE&quot;, &quot;SELENOP&quot;), CD4_Naive_score = c(&quot;TSHZ2&quot;, &quot;MAL&quot;, &quot;CCR7&quot;, &quot;CAMK4&quot;, &quot;LEF1&quot;, &quot;BCL11B&quot;, &quot;FHIT&quot;, &quot;RCAN3&quot;, &quot;SH3YL1&quot;, &quot;PIK3IP1&quot;), CD4_Effector_score = c(&quot;TNFRSF4&quot;, &quot;AQP3&quot;, &quot;TNFRSF25&quot;, &quot;MAL&quot;, &quot;IL7R&quot;, &quot;TRAT1&quot;, &quot;RORA&quot;, &quot;FLT3LG&quot;, &quot;KLRB1&quot;, &quot;CD6&quot;), CD4_Memory_score = c(&quot;MAL&quot;, &quot;TRAT1&quot;, &quot;AP3M2&quot;, &quot;CAMK4&quot;, &quot;AQP3&quot;, &quot;IL7R&quot;, &quot;RCAN3&quot;, &quot;BCL11B&quot;, &quot;LEF1&quot;, &quot;FLT3LG&quot;), CD8_Naive_score = c(&quot;NELL2&quot;, &quot;CD8B&quot;, &quot;S100B&quot;, &quot;TRABD2A&quot;, &quot;CCR7&quot;, &quot;OXNAD1&quot;, &quot;FLT3LG&quot;, &quot;MAL&quot;, &quot;LEF1&quot;, &quot;CAMK4&quot;), CD8_Effector_1_score = c(&quot;CRTAM&quot;, &quot;IFNG&quot;, &quot;CD8A&quot;, &quot;XCL1&quot;, &quot;GZMK&quot;, &quot;TIGIT&quot;, &quot;CCL4L2&quot;, &quot;CD8B&quot;, &quot;CD160&quot;, &quot;XCL2&quot;), CD8_Effector_2_score = c(&quot;ZNF683&quot;, &quot;PRSS23&quot;, &quot;KLRC2&quot;, &quot;FCRL6&quot;, &quot;S1PR5&quot;, &quot;GZMH&quot;, &quot;FGFBP2&quot;, &quot;PATL2&quot;, &quot;TRGC2&quot;, &quot;CD3G&quot;), CD8_Effector_3_score = c(&quot;GZMK&quot;, &quot;CD160&quot;, &quot;CD8A&quot;, &quot;KLRB1&quot;, &quot;LAG3&quot;, &quot;CCL4&quot;, &quot;XCL2&quot;, &quot;GZMM&quot;, &quot;XCL1&quot;, &quot;CCL3&quot;), CD8_Memory_score = c(&quot;CD8B&quot;, &quot;CD8A&quot;, &quot;GZMK&quot;, &quot;IL7R&quot;, &quot;BCL11B&quot;, &quot;CD3E&quot;, &quot;PIK3IP1&quot;, &quot;CD6&quot;, &quot;TRAC&quot;, &quot;SPOCK2&quot;), T_Proliferating_score = c(&quot;RRM2&quot;, &quot;MKI67&quot;, &quot;BIRC5&quot;, &quot;LCK&quot;, &quot;SH2D1A&quot;, &quot;CLSPN&quot;, &quot;CDT1&quot;, &quot;TK1&quot;, &quot;TOP2A&quot;, &quot;TRAC&quot;), MAIT_score = c(&quot;KLRB1&quot;, &quot;IL7R&quot;, &quot;TNFRSF25&quot;, &quot;SPOCK2&quot;, &quot;RORA&quot;, &quot;NCR3&quot;, &quot;GZMK&quot;, &quot;KLRG1&quot;, &quot;TRGC2&quot;, &quot;CD6&quot;), NK_score = c(&quot;SH2D1B&quot;, &quot;PRSS23&quot;, &quot;S1PR5&quot;, &quot;LAIR2&quot;, &quot;KLRC1&quot;, &quot;PTGDR&quot;, &quot;FGFBP2&quot;, &quot;FCRL6&quot;, &quot;TBX21&quot;, &quot;KLRC2&quot;), NK_CD56_score = c(&quot;SPTSSB&quot;, &quot;NCAM1&quot;, &quot;KLRC1&quot;, &quot;XCL1&quot;, &quot;IL18RAP&quot;, &quot;XCL2&quot;, &quot;IL2RB&quot;, &quot;KLRF1&quot;, &quot;TNFRSF18&quot;, &quot;KLRD1&quot;), NK_Proliferating_score = c(&quot;GZMA&quot;, &quot;GZMB&quot;, &quot;TRDC&quot;, &quot;PRF1&quot;, &quot;TYMS&quot;, &quot;FGFBP2&quot;, &quot;KLRF1&quot;, &quot;CD247&quot;, &quot;GZMH&quot;, &quot;CCL4&quot;), ILC_score = c(&quot;LDB2&quot;, &quot;CD160&quot;, &quot;XCL2&quot;, &quot;KLRB1&quot;, &quot;XCL1&quot;, &quot;KLRF1&quot;, &quot;KLRD1&quot;, &quot;KLRC1&quot;, &quot;TRDC&quot;, &quot;GZMM&quot;), pro_B_score = c(&quot;CYGB&quot;, &quot;UMODL1&quot;, &quot;EBF1&quot;, &quot;MME&quot;, &quot;VPREB1&quot;, &quot;DNTT&quot;, &quot;IGLL1&quot;, &quot;UHRF1&quot;, &quot;BLNK&quot;, &quot;AGPS&quot;), pre_B_score = c(&quot;NPY&quot;, &quot;LCN6&quot;, &quot;RAG2&quot;, &quot;HMHB1&quot;, &quot;ARPP21&quot;, &quot;AKAP12&quot;, &quot;RAG1&quot;, &quot;C10orf10&quot;, &quot;CYGB&quot;, &quot;SLC8A1-AS1&quot;), Naive_B_score = c(&quot;FCRL2&quot;, &quot;FCRL1&quot;, &quot;ARHGAP24&quot;, &quot;FCRL5&quot;, &quot;FCER2&quot;, &quot;FCRLA&quot;, &quot;PAX5&quot;, &quot;CD19&quot;, &quot;HLA-DOB&quot;, &quot;CD22&quot;), Memory_B_score = c(&quot;FCRL2&quot;, &quot;TNFRSF13B&quot;, &quot;ARHGAP24&quot;, &quot;PNOC&quot;, &quot;FCER2&quot;, &quot;FCRLA&quot;, &quot;BLK&quot;, &quot;HLA-DOB&quot;, &quot;MS4A1&quot;, &quot;TNFRSF13C&quot;), Plasma_score = c(&quot;SDC1&quot;, &quot;IGLC6&quot;, &quot;IGLV6-57&quot;, &quot;TNFRSF17&quot;, &quot;IGLV3-1&quot;, &quot;TNFRSF13B&quot;, &quot;IGLC7&quot;, &quot;JSRP1&quot;, &quot;FCRL5&quot;, &quot;IGKV1-5&quot;), transitional_B_score = c(&quot;BMP3&quot;, &quot;CFAP73&quot;, &quot;ARPP21&quot;, &quot;IGLC5&quot;, &quot;APBB2&quot;, &quot;HRK&quot;, &quot;DTX1&quot;, &quot;AKAP12&quot;, &quot;IGLC6&quot;, &quot;MME&quot;), Exhaustion_score = c(&quot;CTLA4&quot;, &quot;PDCD1&quot;, &quot;TIGIT&quot;, &quot;LAG3&quot;, &quot;HAVCR2&quot;, &quot;TOX&quot;), HLA1_score = c(&quot;HLA-A&quot;, &quot;HLA-B&quot;, &quot;HLA-C&quot;, &quot;HLA-E&quot;, &quot;HLA-F&quot;, &quot;HLA-G&quot;), HLA2_score = c(&quot;HLA-DRA&quot;, &quot;HLA-DRB&quot;, &quot;HLA-DQA1&quot;, &quot;HLA-DQA2&quot;, &quot;HLA-DQB1&quot;, &quot;HLA-DQB2&quot;, &quot;HLA-DPA1&quot;, &quot;HLA-DPA2&quot;, &quot;HLA-DPB1&quot;, &quot;HLA-DPB2&quot;, &quot;HLA-DMA&quot;, &quot;HLA-DMB&quot;, &quot;HLA-DOA&quot;, &quot;HLA-DOB&quot;, &quot;HLA-DRB1&quot;, &quot;HLA-DRB2&quot;, &quot;HLA-DRB3&quot;, &quot;HLA-DRB4&quot;, &quot;HLA-DRB5&quot;, &quot;HLA-DRB6&quot;, &quot;HLA-DRB7&quot;, &quot;HLA-DRB8&quot;, &quot;HLA-DRB9&quot;) ) idx_feature = rev(names(cd_features)) p &lt;- DotPlot(object = scAML.O.anno, assay = &quot;RNA&quot;, features = idx_feature, cols = &quot;RdYlBu&quot;, group.by = &quot;FAB&quot;, split.by = &quot;annoL2&quot;) + geom_point(aes(size = pct.exp), shape = 21, stroke = 0.2) + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + coord_flip() idx.sel &lt;- scAML.O.anno@meta.data %&gt;% group_by(FAB, annoL2) %&gt;% summarise(N = n()) %&gt;% filter(N &gt;= 10 &amp; !annoL2 %in% &quot;LowQual&quot;) %&gt;% unite(&quot;id&quot;, c(FAB, annoL2)) %&gt;% pull(id) my_c &lt;- unique(str_replace_all(idx.sel, &quot;M2AE_|M3PR_|M4CM_|HC_BMMC_&quot;, &quot;&quot;)) #### df_raw &lt;- p$data %&gt;% filter(id %in% idx.sel) %&gt;% mutate(features.plot = factor(features.plot, levels = rev(names(cd_features)[c(1:6, 20:33, 40, 34:39, 11:19, 7:10, 41:42)]))) %&gt;% filter(features.plot %in% names(cd_features)[1:40]) %&gt;% mutate(FAB = str_extract(id, &quot;M2AE|M3PR|M4CM|HC_BMMC&quot;), annoL2 = str_replace_all(id, &quot;M2AE_|M3PR_|M4CM_|HC_BMMC_&quot;, &quot;&quot;)) %&gt;% mutate(annoL2 = factor(annoL2, levels = anno_name.O[anno_name.O %in% my_c])) p1 &lt;- df_raw %&gt;% group_by(features.plot) %&gt;% mutate(avg.exp.scaled = as.numeric(scale(MinMax(log1p(avg.exp), -2, 50)))) %&gt;% ungroup() %&gt;% mutate(avg.exp.scaled = MinMax(avg.exp.scaled, -1.3, 1.3)) %&gt;% ggplot() + geom_point(aes(x = id, y = features.plot, fill = avg.exp.scaled, size = pct.exp), shape = 21, stroke = 0) + facet_grid( ~ annoL2, scales = &quot;free&quot;, space = &quot;free&quot;) + scale_fill_distiller(palette =&quot;RdYlBu&quot;) + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_radius(range = c(1, 6)) pdf(paste0(out_dir, &quot;Fig3e.pdf&quot;), width = 15, height = 9) p1 dev.off() "],["figure-4.html", "4 Figure 4 4.1 (b) Heatmap of primitive cell types 4.2 (c) Heatmap of mature-like cell types 4.3 (d) Distribution of fusion positive cells 4.4 (e) Scatter plot of correlation", " 4 Figure 4 Fig.4 | Gene-signature-based classification of malignant-like cells in AML subtypes. a, Schematics of the bioinformatics pipeline used to identify t(8;21)/t(15;17)/inv(16) AML subtype-specific gene signatures and classify malignant- or normal-like cells in leukemia BMs. Primitive and mature hematopoietic cell types from publicly available healthy scRNA-seq data were used as healthy controls (HC). b, Heatmap displaying the expression of t(8;21)/t(15;17)/inv(16) AML subtype-specific genes across 229,305 single cells, ordered by level 1 cell annotations for primitive cell types. c, Heatmap displaying the expression of t(8;21)/t(15;17)/inv(16) AML subtype-specific genes across 122,289 single cells, ordered by level 1 cell annotations for mature-like cell types. d, Bar charts showing the percentage of cells classified as malignant-like in t(8;21) (left panel), t(15;17) (middle panel), and inv(16) (right panel) AML subtypes. e, Scatterplot comparing clinical blast counts (y-axis) to the fraction of cells classified as malignant-like by gene-signature-based classification (x-axis). Each point corresponds to a specific AML sample. 4.1 (b) Heatmap of primitive cell types res_pred &lt;- read_rds((paste0(in_dir, &quot;0.6.fus_pred/Table1.res_pred.351594.rds&quot;))) %&gt;% rownames_to_column(&quot;ID&quot;) %&gt;% left_join(., read_rds((paste0(in_dir, &quot;Table0.scAML.merge.raw.azimuth.sub_meta.data.rds&quot;))) %&gt;% rownames_to_column(&quot;ID&quot;) %&gt;% dplyr::select(ID, annoL1)) %&gt;% column_to_rownames(&quot;ID&quot;) res_final &lt;- read_rds((paste0(in_dir, &quot;0.6.fus_pred/Table2.res_final.347846.rds&quot;))) scAML.prog.anno &lt;- read_rds(paste0(in_dir, &quot;Table1.3.scAML.prog_harmony.anno.rds&quot;)) scAML.O.anno &lt;- read_rds(paste0(in_dir, &quot;Table1.3.scAML.O_harmony.anno.rds&quot;)) my_idx1 &lt;- c(&quot;FAB&quot;, &quot;SS.final_fus_group&quot;, &quot;fus_group&quot;, &quot;annoL1&quot;) my_idx2 &lt;- c(&quot;M2_score&quot;, &quot;M3_score&quot;, &quot;M4_score&quot;, &quot;HC_score&quot;) my_s &lt;- c(&quot;M2AE_Malignant&quot;, &quot;M2AE_Unclear&quot;, &quot;M3PR_Malignant&quot;, &quot;M3PR_Unclear&quot;, &quot;M4CM_Malignant&quot;, &quot;M4CM_Unclear&quot;, &quot;HC_CD34_Unclear&quot;, &quot;HC_BMMC_Unclear&quot;) anno_color &lt;- c(&quot;#73C8B4&quot;, &quot;#E31A1C&quot;, &quot;#A65628&quot;, &quot;#FDBF6F&quot;, &quot;#9970AB&quot;, &quot;#C2A5CF&quot;, &quot;#6BAED6&quot;, &quot;#33A02C&quot;, &quot;#FB8072&quot;) anno_name &lt;- c(&quot;Progs&quot;, &quot;Progs_Prolif&quot;, &quot;Progs_BaEoMa&quot;, &quot;Mono&quot;, &quot;cDC&quot;, &quot;pDC&quot;, &quot;T.NK&quot;, &quot;B&quot;, &quot;Erythroid&quot;) names(anno_color) &lt;- anno_name my_colors &lt;- c(c(&quot;M2AE&quot; = &quot;#F8766D&quot;, &quot;M3PR&quot; = &quot;#00BA38&quot;, &quot;M4CM&quot; = &quot;#619CFF&quot;, &quot;HC_CD34&quot; = &quot;#C7E8FA&quot;, &quot;HC_BMMC&quot; = &quot;#C7E8FA&quot;), c(&quot;Positive&quot; = &quot;#E64B35&quot;, &quot;UnDetected&quot; = &quot;#F2F2F2&quot;), c(&quot;Malignant&quot; = &quot;#EFC000&quot;, &quot;Unclear&quot; = &quot;#0073C2&quot;), anno_color) my_clin &lt;- res_pred %&gt;% rownames_to_column(&quot;ID&quot;) %&gt;% filter(ID %in% res_final$ID) %&gt;% mutate(fus_group = ifelse(is.na(fus_group), &quot;UnDetected&quot;, fus_group)) %&gt;% unite(&quot;my_split&quot;, c(FAB, SS.final_fus_group), sep = &quot;_&quot;, remove = F) %&gt;% mutate(my_split = factor(my_split, levels = my_s)) %&gt;% group_by(FAB) %&gt;% arrange( case_when( FAB == &quot;M2AE&quot; ~ desc(M2_score), FAB == &quot;M3PR&quot; ~ desc(M3_score), FAB == &quot;M4CM&quot; ~ desc(M4_score), FAB == &quot;HC_CD34&quot; ~ desc(HC_score), FAB == &quot;HC_BMMC&quot; ~ desc(HC_score) ) ) %&gt;% arrange(my_split, annoL1) %&gt;% column_to_rownames(&quot;ID&quot;) idx.cells1 &lt;- intersect(rownames(my_clin), colnames(scAML.prog.anno)) idx.cells2 &lt;- intersect(rownames(my_clin), colnames(scAML.O.anno)) my_clin.prog &lt;- my_clin[idx.cells1, ] my_clin.O &lt;- my_clin[idx.cells2, ] ######### my_idx82 &lt;- c(&quot;RUNX1T1&quot;, &quot;OBI1-AS1&quot;, &quot;PCDH15&quot;, &quot;CAV1&quot;, &quot;POU4F1&quot;, &quot;CACNA2D2&quot;, &quot;MYO18B&quot;, &quot;BMP3&quot;, &quot;CPNE7&quot;, &quot;EPHA3&quot;, &quot;HS3ST4&quot;, &quot;ROBO1&quot;, &quot;AGBL4&quot;, &quot;DNAH8&quot;, &quot;ELAVL4&quot;, &quot;EPGN&quot;, &quot;VLDLR&quot;, &quot;KIF21A&quot;, &quot;PKP2&quot;, &quot;CD226&quot;, &quot;SAMD3&quot;, &quot;IGSF1&quot;, &quot;KCNK12&quot;, &quot;VLDLR-AS1&quot;, &quot;TLR10&quot;, &quot;PID1&quot;, &quot;NNMT&quot;, &quot;PPARG&quot;, &quot;LIN7A&quot;, &quot;IGFBP4&quot;, &quot;LGALS12&quot;, &quot;GXYLT2&quot;, &quot;PTGDS&quot;, &quot;CLTCL1&quot;, &quot;GNLY&quot;, &quot;PHLDA2&quot;, &quot;ADAMTS17&quot;, &quot;TNFRSF4&quot;, &quot;GPC6&quot;, &quot;SLPI&quot;, &quot;DEFB1&quot;, &quot;S100P&quot;, &quot;ZNF98&quot;, &quot;BPI&quot;, &quot;KIAA1217&quot;, &quot;SCN1A-AS1&quot;, &quot;TNFRSF18&quot;, &quot;FCER2&quot;, &quot;AK5&quot;, &quot;RXFP1&quot;, &quot;NT5E&quot;, &quot;CHI3L1&quot;, &quot;FGFR2&quot;, &quot;MEGF10&quot;, &quot;CLEC7A&quot;, &quot;BEX5&quot;, &quot;NKAIN2&quot;, &quot;AVP&quot;, &quot;CHRM3&quot;, &quot;BEX2&quot;, &quot;ALDH1A1&quot;, &quot;HMGA2&quot;, &quot;HOXA9&quot;, &quot;MME&quot;, &quot;SEMA3C&quot;, &quot;PAWR&quot;, &quot;FAM169A&quot;, &quot;CYYR1&quot;, &quot;DPPA4&quot;, &quot;SCML4&quot;, &quot;IL12RB2&quot;, &quot;APOC1&quot;, &quot;ZNF385D-AS2&quot;, &quot;MYCT1&quot;, &quot;NPY&quot;, &quot;DEPP1&quot;, &quot;MPPED2&quot;, &quot;GPR176&quot;, &quot;LEF1-AS1&quot;, &quot;ID3&quot;, &quot;FAM43A&quot;, &quot;COL5A1&quot;) my_idx34 &lt;- c(&quot;RUNX1T1&quot;, &quot;OBI1-AS1&quot;, &quot;SIPA1L2&quot;, &quot;PRAME&quot;, &quot;IL5RA&quot;, &quot;CTSG&quot;, &quot;PCBP3&quot;, &quot;BMERB1&quot;, &quot;SCN9A&quot;, &quot;MN1&quot;, &quot;DNTT&quot;, &quot;UMODL1&quot;, &quot;RXFP1&quot;, &quot;ADARB2&quot;, &quot;ZNF521&quot;, &quot;MEIS1&quot;, &quot;PACSIN1&quot;, &quot;MEGF10&quot;, &quot;COLEC12&quot;, &quot;LSAMP&quot;, &quot;PLCXD1&quot;, &quot;MSLN&quot;, &quot;ARHGEF11&quot;, &quot;SIGLEC6&quot;, &quot;KCNK17&quot;, &quot;CLNK&quot;, &quot;SHANK1&quot;, &quot;ST18&quot;, &quot;PTP4A1&quot;, &quot;FKBP2&quot;, &quot;LAMP5&quot;, &quot;BOLA2B&quot;, &quot;ALDOA&quot;, &quot;HNMT&quot;) my_exp.prog &lt;- data.frame(scAML.prog.anno@assays$RNA@data[my_idx82, idx.cells1], check.names = F) my_exp.O &lt;- data.frame(scAML.O.anno@assays$RNA@data[my_idx34, idx.cells2], check.names = F) pdf(paste0(out_dir, &quot;Fig4b.pdf&quot;), width = 10, height = 7) ht1_a &lt;- Heatmap(t(my_clin.prog[, my_idx1]), name = &quot;group&quot;, height = unit(1.5, &quot;cm&quot;), column_split = my_clin.prog$my_split, column_title_rot = 90, use_raster = T, raster_quality = 5, row_split = 1:4, row_gap = unit(1, &quot;pt&quot;), col = my_colors, cluster_columns = F, cluster_rows = F, show_column_names = F, row_names_gp = gpar(fontsize = 8) ) ht2_a &lt;- Heatmap(t(my_clin.prog[, my_idx2]), name = &quot;sig.score&quot;, height = unit(1.5, &quot;cm&quot;), # column_split = my_clin.prog$my_split, column_title_rot = 90, use_raster = T, raster_quality = 5, col = circlize::colorRamp2(c(-0.1, 0.6), c(&quot;#FFFFFF&quot;, &quot;#262626&quot;), space = &quot;RGB&quot;), cluster_columns = F, cluster_rows = F, show_column_names = F, row_names_gp = gpar(fontsize = 8) ) ht3_a &lt;- Heatmap(t(scale(t(my_exp.prog))), name = &quot;Z-score&quot;, height = unit(10, &quot;cm&quot;), # column_split = my_clin.prog$my_split, column_title_rot = 90, use_raster = T, raster_quality = 5, col = circlize::colorRamp2(c(-1, 0, 1), c(&quot;#0000FF&quot;, &quot;#FFFFFF&quot;, &quot;#FF0000&quot;), space = &quot;RGB&quot;), cluster_columns = F, cluster_rows = F, show_column_names = F, row_names_gp = gpar(fontsize = 3) ) ht_list_a = ht1_a %v% ht2_a %v% ht3_a draw(ht_list_a) dev.off() 4.2 (c) Heatmap of mature-like cell types pdf(paste0(out_dir, &quot;Fig4c.pdf&quot;), width = 7, height = 7) ht1_b &lt;- Heatmap(t(my_clin.O[, my_idx1]), name = &quot;group&quot;, height = unit(1.5, &quot;cm&quot;), column_split = my_clin.O$my_split, column_title_rot = 90, use_raster = T, raster_quality = 5, row_split = 1:4, row_gap = unit(1, &quot;pt&quot;), col = my_colors, cluster_columns = F, cluster_rows = F, show_column_names = F, row_names_gp = gpar(fontsize = 8) ) ht2_b &lt;- Heatmap(t(my_clin.O[, my_idx2]), name = &quot;sig.score&quot;, height = unit(1.5, &quot;cm&quot;), # column_split = my_clin.O$my_split, column_title_rot = 90, use_raster = T, raster_quality = 5, col = circlize::colorRamp2(c(-0.1, 0.6), c(&quot;#FFFFFF&quot;, &quot;#262626&quot;), space = &quot;RGB&quot;), cluster_columns = F, cluster_rows = F, show_column_names = F, row_names_gp = gpar(fontsize = 8) ) ht3_b &lt;- Heatmap(t(scale(t(my_exp.O))), name = &quot;Z-score&quot;, height = unit(10, &quot;cm&quot;), # column_split = my_clin.O$my_split, column_title_rot = 90, use_raster = T, raster_quality = 5, col = circlize::colorRamp2(c(-1, 0, 1), c(&quot;#0000FF&quot;, &quot;#FFFFFF&quot;, &quot;#FF0000&quot;), space = &quot;RGB&quot;), cluster_columns = F, cluster_rows = F, show_column_names = F, row_names_gp = gpar(fontsize = 5) ) ht_list_b = ht1_b %v% ht2_b %v% ht3_b draw(ht_list_b) dev.off() 4.3 (d) Distribution of fusion positive cells res_final &lt;- read_rds(paste0(in_dir, &quot;Table2.res_final.347846.rds&quot;)) anno_color &lt;- c(&quot;#73C8B4&quot;, &quot;#E31A1C&quot;, &quot;#A65628&quot;, &quot;#FDBF6F&quot;, &quot;#9970AB&quot;, &quot;#C2A5CF&quot;, &quot;#6BAED6&quot;, &quot;#33A02C&quot;, &quot;#FB8072&quot;) anno_name &lt;- c(&quot;Progs&quot;, &quot;Progs_Prolif&quot;, &quot;Progs_BaEoMa&quot;, &quot;Mono&quot;, &quot;cDC&quot;, &quot;pDC&quot;, &quot;T.NK&quot;, &quot;B&quot;, &quot;Erythroid&quot;) names(anno_color) &lt;- anno_name ## 1.fus Freq: in each sub cluster df1 &lt;- res_final %&gt;% filter(!FAB %in% &quot;HC&quot;) %&gt;% group_by(FAB, annoL1, SS.final_fus_group) %&gt;% summarise(N = n()) %&gt;% mutate(Freq = (N/sum(N)), orig.ident = &quot;Merged&quot;) %&gt;% filter(SS.final_fus_group %in% &quot;Malignant&quot;) %&gt;% dplyr::select(FAB, orig.ident, annoL1, N, Freq) %&gt;% mutate(annoL1 = factor(annoL1, levels = my_c)) p1 &lt;- ggplot(df1, aes(x = annoL1, y = Freq, fill = annoL1)) + geom_col(width = 0.65) + geom_text(aes(label = scales::percent(Freq, accuracy = .1)), position = &quot;stack&quot;, vjust = 1, size = 3) + scale_y_continuous(labels = scales::percent) + theme_bw() + scale_fill_manual(values = anno_color) + facet_grid(~ FAB, scales = &quot;free_x&quot;, space = &quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.title.x = element_blank(), legend.position = &quot;none&quot;) + scale_y_continuous(labels = percent_format(), limits = c(0, 1)) + labs(y = &quot;Predicted Fus Proportions in Each Cluster&quot;) pdf(paste0(out_dir, &quot;Fig4d.pdf&quot;), width = 6, height = 4) p1 dev.off() 4.4 (e) Scatter plot of correlation aml_clin &lt;- read.xlsx(paste0(in_dir, &quot;aml_clin.xlsx&quot;), sheet = 1) %&gt;% filter(!is.na(pred_fus_Freq) &amp; !is.na(BM_blasts_FCS)) pc_3 &lt;- aml_clin %&gt;% ggplot(aes(pred_fus_Freq, BM_blasts)) + geom_point(aes(color = FAB, shape = FAB), size = 2) + geom_abline(slope = 1) + scale_color_manual(values = c(&quot;#F8766D&quot;, &quot;#00BA38&quot;, &quot;#619CFF&quot;)) + scale_x_continuous(limits = c(0, 100)) + scale_y_continuous(limits = c(0, 100)) + labs(x = &quot;Predicted by signature scores (%)&quot;, y = &quot;BM blast final (%)&quot;, title = &quot;Fraction of malignant cells&quot;) + theme_bw() + theme(plot.title = element_text(hjust = 0.5)) + stat_cor(method = &quot;spearman&quot;, label.x = 3, label.y = 90) pdf(paste0(out_dir, &quot;Fig4e.pdf&quot;), width = 5, height = 4) pc_3 dev.off() "],["figure-5.html", "5 Figure 5 5.1 (a) Bar charts 5.2 (b) Dot plots of GSEA results 5.3 (c-e) GSEA plots across AML 5.4 (g) Dot plot in T/NK cells", " 5 Figure 5 Fig.5 | Fusion-target genes contribute to cross-lineage transcriptional aberrations in each AML subtype. a, Bar charts illustrating the proportions of 27 various cell types (annoL2) within malignant-like and normal-like cells across t(8;21), t(15;17), and inv(16) AML subtypes. b, Dot plots showing the results of GSEA analysis using genes differentially expressed between malignant-like and normal-like cells across 11 broad cell types in t(8;21), t(15;17), and inv(16) AML BMs. Significantly enriched gene set terms are shown. c, GSEA plots showing that in various cell types of t(8;21) AML, differentially expressed genes between malignant-like and normal-like cells are significantly enriched among the target genes of RUNX1::RUNX1T1. The top 10 associated genes from the leading edges are highlighted at the bottom. d, GSEA plots showing that in various cell types of t(15;17) AML, differentially expressed genes between malignant-like and normal-like cells are significantly enriched among the target genes of PML::RARA. The top 10 associated genes from the leading edges are highlighted in the bottom panel. e, GSEA plots show that in various cell types of inv(16) AML, differentially expressed genes between malignant-like and normal-like cells are significantly enriched among the target genes of CBFB::MYH11. The top 10 associated genes from the leading edges are highlighted in the bottom panel. f, IGV tracks for selected gene loci, showcasing distinct ChIP-seq profiles for antibodies targeting the fusion peptide of RUNX1::RUNXT1 (red), PML::RARA (green), and different modalities of CBFB::MYH11 (blue). g, GSEA enrichment analysis revealing significantly enriched biological processes for T/NK cells in t(8;21), t(15;17), and inv(16) AML subtypes. 5.1 (a) Bar charts ## info &amp; function bar_plot_g.anno &lt;- function(object){ mydata_g &lt;- object %&gt;% group_by(group, seurat_clusters) %&gt;% summarise(N = n()) %&gt;% group_by(group) %&gt;% mutate(Freq = (N/sum(N)) * 100, Cumsum = cumsum(Freq), group = factor(group, levels = g_list)) %&gt;% separate(group, c(&quot;FAB&quot;, NA), sep = &quot;:&quot;, remove = F) %&gt;% mutate(FAB = factor(FAB, levels = g_raw)) p &lt;- ggplot(mydata_g, aes(x = group, y = Freq/100, fill = seurat_clusters)) + geom_col(width = 0.8) + scale_fill_manual(values = annoL2_color) + facet_grid(. ~ FAB, scales = &quot;free&quot;, space = &quot;free&quot;) + scale_y_continuous(labels = scales::percent) + theme_bw() + theme(legend.key.size = unit(0.35, &quot;cm&quot;), axis.text.x = element_text(angle = 45, hjust = 1), panel.grid = element_blank(), panel.spacing = unit(0, &quot;lines&quot;)) + labs(x = &quot;&quot;, y = &quot;Percentage&quot;) return(p) } annoL1_name &lt;- c(&quot;Progs&quot;, &quot;Progs_Prolif&quot;, &quot;Progs_BaEoMa&quot;, &quot;Mono&quot;, &quot;cDC&quot;, &quot;pDC&quot;, &quot;T.NK&quot;, &quot;B&quot;, &quot;Erythroid&quot;) annoL1_color &lt;- c(&quot;#73C8B4&quot;, &quot;#E31A1C&quot;, &quot;#A65628&quot;, &quot;#FDBF6F&quot;, &quot;#9970AB&quot;, &quot;#C2A5CF&quot;, &quot;#6BAED6&quot;, &quot;#33A02C&quot;, &quot;#FB8072&quot;, &quot;#C51B7D&quot;, &quot;#D9D9D9&quot;) anno_color.P &lt;- c(&quot;#E31A1C&quot;, &quot;#86C2E2&quot;, &quot;#33A02C&quot;, &quot;#1F78B4&quot;, &quot;#A65628&quot;, &quot;#B2DF8A&quot;, &quot;#7570B3&quot;, &quot;#73C8B4&quot;, &quot;#F1B6DA&quot;, &quot;#FB8072&quot;, &quot;#D95F02&quot;) anno_name.P &lt;- c(&quot;HSC.MPP-like&quot;, &quot;LMPP-like&quot;, &quot;CLP-like1&quot;, &quot;GMP-like&quot;, &quot;BaEoMa-like&quot;, &quot;Progs-Prolif&quot;, &quot;NPW-high&quot;, &quot;LSC17-high&quot;, &quot;Pre-DC&quot;, &quot;Erythroid&quot;, &quot;Pre-B&quot;) names(anno_color.P) &lt;- anno_name.P anno_color.O &lt;- c(&quot;#A6CEE3&quot;, &quot;#45B4FF&quot;, &quot;#FDDAEC&quot;, &quot;#FEE090&quot;, &quot;#BEB9FF&quot;, &quot;#1B9E77&quot;, &quot;#A1D99B&quot;, &quot;#FF9B4F&quot;, &quot;#27AD7B&quot;, &quot;#FDBF6F&quot;, &quot;#DE77AE&quot;, &quot;#AB47BC&quot;, &quot;#FF77F8&quot;, &quot;#FD66AC&quot;, &quot;#23C8A1&quot;, &quot;#C51B7D&quot;, &quot;#D9D9D9&quot;) anno_name.O &lt;- c(&quot;CD4Naive&quot;, &quot;CD8Naive&quot;, &quot;CD4EM&quot;, &quot;CD8EM&quot;, &quot;NK&quot;, &quot;MAIT&quot;, &quot;MatureB&quot;, &quot;PlasmaB&quot;, &quot;CLP-like2&quot;, &quot;CD14Mono&quot;, &quot;CD16Mono&quot;, &quot;cDC&quot;, &quot;pDC&quot;, &quot;EarlyE&quot;, &quot;LateE&quot;, &quot;ProgMK&quot;, &quot;LowQual&quot;) names(anno_color.O) &lt;- anno_name.O annoL2_color &lt;- c(anno_color.P, anno_color.O) annoL2_name &lt;- c(anno_name.P, anno_name.O) ## load data res_final &lt;- read_rds(paste0(in_dir, &quot;Table2.res_final.347846.rds&quot;)) dat_final &lt;- res_final %&gt;% filter(!is.na(SS.final_fus_group)) %&gt;% mutate(annoL2 = as.character(annoL2)) %&gt;% mutate(annoL2.new = ifelse((annoL1 %in% annoL1_name[4:9] &amp; annoL2 %in% &quot;CLP-like&quot;), &quot;CLP-like2&quot;, ifelse((annoL1 %in% annoL1_name[1:3] &amp; annoL2 %in% &quot;CLP-like&quot;), &quot;CLP-like1&quot;, annoL2))) %&gt;% mutate(annoL2.new = factor(annoL2.new, levels = annoL2_name), seurat_clusters = annoL2.new) %&gt;% mutate(group = paste0(FAB, &quot;:&quot;, SS.final_fus_group)) %&gt;% mutate(group = factor(group, levels = g_list)) %&gt;% mutate(orig.ident = paste0(SS.final_fus_group, &quot;:&quot;, orig.ident)) p1 &lt;- bar_plot_g.anno(object = dat_final %&gt;% filter(!FAB %in% &quot;HC&quot;)) pdf(paste0(out_dir, &quot;Fig5a.pdf&quot;), width = 4.5, height = 4) p1 dev.off() 5.2 (b) Dot plots of GSEA results idx.sel &lt;- c( &quot;ROSS_ACUTE_MYELOID_LEUKEMIA_CBF&quot;, &quot;ROSS_AML_WITH_AML1_ETO_FUSION&quot;, &quot;VALK_AML_WITH_T_8_21_TRANSLOCATION&quot;, &quot;YAGI_AML_WITH_T_8_21_TRANSLOCATION&quot;, &quot;ROSS_AML_WITH_PML_RARA_FUSION&quot;, &quot;CASORELLI_ACUTE_PROMYELOCYTIC_LEUKEMIA_UP&quot;, &quot;YAGI_AML_WITH_INV_16_TRANSLOCATION&quot;, &quot;VALK_AML_CLUSTER_9&quot;, &quot;ROSS_AML_WITH_CBFB_MYH11_FUSION&quot;) res_gsea &lt;- read_rds(paste0(in_dir, &quot;1.10.2.degs.scAML.sub_compare_gsea.1.HC2.rds&quot;)) df &lt;- rbindlist(res_gsea) %&gt;% filter(ID %in% idx.sel) %&gt;% filter(qvalue &lt; 0.05) %&gt;% separate(group, c(&quot;FAB&quot;, &quot;cluster&quot;), sep = &quot;:&quot;) %&gt;% mutate(cluster = factor(cluster, levels = my_g)) %&gt;% mutate(LGP = -log10(qvalue)) pdf(paste0(out_dir, &quot;Fig5b.pdf&quot;), width = 9.5, height = 0.21*length(idx.sel) + 1) df %&gt;% mutate(NES = Seurat::MinMax(NES, -2.5, 2.5)) %&gt;% ggplot(aes_string(x = &quot;cluster&quot;, y = &quot;Description&quot;, size = &quot;LGP&quot;, color = &quot;NES&quot;)) + geom_point() + scale_y_discrete(position = &quot;right&quot;) + scale_color_gradient2(low = &quot;blue&quot;, mid = &quot;white&quot;, high = &quot;red&quot;, name = &quot;Normalized \\nenrichment score&quot;, limits = c(-2.5, 2.5)) + scale_size(name = &quot;-log10 (adj P-value)&quot;, range = c(1.5, 5)) + facet_grid(~ FAB, scales = &quot;free&quot;, space = &quot;free&quot;) + xlab(NULL) + ylab(NULL) + DOSE::theme_dose(8) + theme(legend.key.size = unit(0.3, &quot;cm&quot;)) + theme( panel.grid = element_blank(), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) dev.off() 5.3 (c-e) GSEA plots across AML anno_color &lt;- c(&quot;#73C8B4&quot;, &quot;#E31A1C&quot;, &quot;#A65628&quot;, &quot;#FDBF6F&quot;, &quot;#9970AB&quot;, &quot;#C2A5CF&quot;, &quot;#1F78B4&quot;, &quot;#B2DF8A&quot;, &quot;#7570B3&quot;, &quot;#33A02C&quot;, &quot;#FB8072&quot;) my_g &lt;- c(&quot;Progs&quot;, &quot;Progs_Prolif&quot;, &quot;Progs_BaEoMa&quot;, &quot;Mono&quot;, &quot;cDC&quot;, &quot;pDC&quot;, &quot;CD4T&quot;, &quot;CD8T&quot;, &quot;NK&quot;, &quot;B&quot;, &quot;Erythroid&quot;) dat_degs &lt;- read.xlsx(paste0(in_dir, &quot;1.10.1.degs.scAML.sub_compare.xlsx&quot;)) %&gt;% mutate(group = factor(group, levels = my_g), cluster = factor(cluster, levels = c(&quot;M2AE&quot;, &quot;M3PR&quot;, &quot;M4CM&quot;))) m2_gsdat_list &lt;- list() m2_gsplot_list &lt;- list() for(k in my_g[c(1:4, 7:11)]){ m2_res_gsea &lt;- run_gsea_term(dat_degs %&gt;% filter(cluster %in% &quot;M2AE&quot; &amp; group %in% k), ix_path = &quot;ROSS_AML_WITH_AML1_ETO_FUSION&quot;) m2_gsdat_list[[k]] &lt;- gsInfo(m2_res_gsea, 1) %&gt;% mutate(Description = k) m2_gsplot_list[[k]] &lt;- run_gsea_plot_v2(res = m2_res_gsea, my_title = k) } m3_idx &lt;- c(1:4, 7:11) m3_gsdat_list &lt;- list() m3_gsplot_list &lt;- list() for(k in my_g[c(1:4, 7:11)]){ m3_res_gsea &lt;- run_gsea_term(dat_degs %&gt;% filter(cluster %in% &quot;M3PR&quot; &amp; group %in% k), ix_path = &quot;ROSS_AML_WITH_PML_RARA_FUSION&quot;) m3_gsdat_list[[k]] &lt;- gsInfo(m3_res_gsea, 1) %&gt;% mutate(Description = k) m3_gsplot_list[[k]] &lt;- run_gsea_plot_v2(res = m3_res_gsea, my_title = k) } m4_gsdat_list &lt;- list() m4_gsplot_list &lt;- list() for(k in my_g[m4_idx]){ m4_res_gsea &lt;- run_gsea_term(dat_degs %&gt;% filter(cluster %in% &quot;M4CM&quot; &amp; group %in% k), ix_path = &quot;VALK_AML_CLUSTER_9&quot;) m4_gsdat_list[[k]] &lt;- gsInfo(m4_res_gsea, 1) %&gt;% mutate(Description = k) m4_gsplot_list[[k]] &lt;- run_gsea_plot_v2(res = m4_res_gsea, my_title = k) } m2_idx &lt;- c(1:4, 7:11) p1_a &lt;- my_gseaplot2(rbindlist(m2_gsdat_list) %&gt;% filter(Description %in% my_g[m2_idx]) %&gt;% mutate(Description = factor(Description, levels = my_g[m2_idx])), title = &quot;M2\\nROSS_AML_WITH_AML1_ETO_FUSION&quot;, rel_heights = c(1, 0.5), subplots = 1:2, base_size = 10, color = anno_color[m2_idx]) m3_idx &lt;- c(1:3, 7:8, 10:11) p1_b &lt;- my_gseaplot2(rbindlist(m3_gsdat_list) %&gt;% filter(Description %in% my_g[m3_idx]) %&gt;% mutate(Description = factor(Description, levels = my_g[m3_idx])), title = &quot;M3\\nROSS_AML_WITH_PML_RARA_FUSION&quot;, rel_heights = c(1, 0.5), subplots = 1:2, base_size = 10, color = anno_color[m3_idx]) m4_idx &lt;- c(2:5, 8, 10:11) p1_c &lt;- my_gseaplot2(rbindlist(m4_gsdat_list) %&gt;% filter(Description %in% my_g[m4_idx]) %&gt;% mutate(Description = factor(Description, levels = my_g[m4_idx])), title = &quot;M4\\nVALK_AML_CLUSTER_9&quot;, rel_heights = c(1, 0.5), subplots = 1:2, base_size = 10, color = anno_color[m4_idx]) pdf(paste0(out_dir, &quot;Fig5c-e.pdf&quot;), width = 12, height = 4) wrap_plots(list(p1_a, p1_b, p1_c)) dev.off() 5.4 (g) Dot plot in T/NK cells df &lt;- rbindlist(res_gsea) %&gt;% filter(grepl(&quot;CD4T|CD8T|NK&quot;, group)) %&gt;% filter(ID %in% idx.sel) %&gt;% filter(qvalue &lt; 0.05) %&gt;% separate(group, c(&quot;FAB&quot;, &quot;cluster&quot;), sep = &quot;:&quot;) %&gt;% mutate(cluster = factor(cluster, levels = my_g)) %&gt;% mutate(Description = factor(Description, levels = rev(idx.sel))) %&gt;% mutate(LGP = -log10(qvalue)) pdf(paste0(out_dir, &quot;Fig5g.pdf&quot;), width = 9, height = 0.13*length(idx.sel) + 1) df %&gt;% mutate(NES = Seurat::MinMax(NES, -2.5, 2.5)) %&gt;% ggplot(aes_string(x = &quot;cluster&quot;, y = &quot;Description&quot;, size = &quot;LGP&quot;, color = &quot;NES&quot;)) + geom_point() + scale_y_discrete(position = &quot;right&quot;) + scale_color_gradient2(low = &quot;blue&quot;, mid = &quot;white&quot;, high = &quot;red&quot;, name = &quot;Normalized \\nenrichment score&quot;, limits = c(-2.5, 2.5)) + scale_size(name = &quot;-log10 (adj P-value)&quot;, range = c(1.5, 5)) + facet_grid(~ FAB, scales = &quot;free&quot;, space = &quot;free&quot;) + xlab(NULL) + ylab(NULL) + DOSE::theme_dose(8) + theme(legend.key.size = unit(0.3, &quot;cm&quot;)) + theme( panel.grid = element_blank(), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) dev.off() "],["figure-6.html", "6 Figure 6 6.1 Circle plots", " 6 Figure 6 Fig.6 | Immune suppression induced by ligand-receptor interactions between immature malignant-like blasts and T/NK cells. Circle plots of the predicted ligand-receptor interactions between malignant-like blasts (blasts, proliferating blasts, and BaEoMa) and various immune lymphocytes, including malignant-like (upper panel) CD4 T cells, CD8 T cells, and NK cells, as well as normal-like (bottom panel) immune lymphocytes in t(8;21), t(15;17), and inv(16) AML subtypes. Red, blue, and gray arcs represent suppressive, activating, and unknown interactions, respectively. 6.1 Circle plots g_name &lt;- c(&quot;M2AE.M_M&quot;, &quot;M3PR.M_M&quot;, &quot;M4CM.M_M&quot;, &quot;M2AE.M_U&quot;, &quot;M3PR.M_U&quot;, &quot;M4CM.M_U&quot;) for (g in g_name){ connect &lt;- read.xlsx(paste0(in_dir, &quot;Table.cellchat.lr_order.xlsx&quot;), sheet = 1) %&gt;% filter(!is.na(eval(parse(text = g)))) %&gt;% dplyr::select(ligand, receptor, color) %&gt;% distinct() arr.col = read.xlsx(paste0(in_dir, &quot;Table.cellchat.lr_order.xlsx&quot;)) %&gt;% filter(!is.na(eval(parse(text = g)))) %&gt;% dplyr::select(ligand, receptor, color) %&gt;% distinct() g_len1 &lt;- read.xlsx(paste0(in_dir, &quot;Table.cellchat.lr_order.xlsx&quot;), sheet = 1) %&gt;% filter(!is.na(eval(parse(text = g)))) %&gt;% pull(ligand_2) %&gt;% unique() %&gt;% length() g_len2 &lt;- read.xlsx(paste0(in_dir, &quot;Table.cellchat.lr_order.xlsx&quot;), sheet = 1) %&gt;% filter(!is.na(eval(parse(text = g)))) %&gt;% filter(target %in% &quot;CD4T&quot;) %&gt;% pull(receptor_2) %&gt;% unique() %&gt;% length() g_len3 &lt;- read.xlsx(paste0(in_dir, &quot;Table.cellchat.lr_order.xlsx&quot;), sheet = 1) %&gt;% filter(!is.na(eval(parse(text = g)))) %&gt;% filter(target %in% &quot;CD8T&quot;) %&gt;% pull(receptor_2) %&gt;% unique() %&gt;% length() g_len4 &lt;- read.xlsx(paste0(in_dir, &quot;Table.cellchat.lr_order.xlsx&quot;), sheet = 1) %&gt;% filter(!is.na(eval(parse(text = g)))) %&gt;% filter(target %in% &quot;NK&quot;) %&gt;% pull(receptor_2) %&gt;% unique() %&gt;% length() pdf(paste0(out_dir, &quot;Fig6&quot;, g, &quot;.lr.pdf&quot;), width = 4, height = 4) # parameters circos.clear() circos.par(start.degree = 160, gap.after = c(rep(1, g_len1 - 1), 16, rep(1, g_len2 - 1), 8, rep(1, g_len3 - 1), 8, rep(1, g_len4 - 1), 16), track.margin = c(-0.3, 0.3), points.overflow.warning = F) par(mar = c(0, 0, 0, 0)) # color palette k &lt;- length(unique(c(connect$ligand, connect$receptor))) n &lt;- length(unique(connect$ligand)) + 1 mycolor &lt;- rep(c(&quot;#440154&quot;, &quot;#8FD744&quot;, &quot;#C7E020&quot;, &quot;#FDE725&quot;), c(g_len1, g_len2, g_len3, g_len4)) myorder &lt;- c(connect$ligand, connect$receptor) %&gt;% unique() # Base plot chordDiagram(x = connect[, 1:3], grid.col = mycolor, col = c(&quot;white&quot;), order = myorder, transparency = 0.9, directional = 1, direction.type = c(&quot;arrows&quot;, &quot;diffHeight&quot;), diffHeight = -0.02, annotationTrack = &quot;grid&quot;, annotationTrackHeight = c(0.01, 0.1), # link.arr.type = &quot;big.arrow&quot;, link.arr.length = 0.2, link.arr.col = arr.col, link.sort = T, link.largest.ontop = T, preAllocateTracks = list(track.height = mm_h(2), track.margin = c(mm_h(2), 0)) ) # Add text and axis circos.trackPlotRegion( track.index = 1, bg.border = NA, panel.fun = function(x, y) { xlim = get.cell.meta.data(&quot;xlim&quot;) ylim = get.cell.meta.data(&quot;ylim&quot;) sector.index = get.cell.meta.data(&quot;sector.index&quot;) # Add names to the sector. circos.text(x = mean(xlim) + 0.25, y = -8, adj = -0.05, labels = sector.index, facing = &quot;clockwise&quot;, cex = 0.7, niceFacing = T) } ) ## # Add group info brand &lt;- setNames(unlist(lapply(myorder, function(x) unlist(str_split(x, &quot;_&quot;))[1])), myorder) brand_color &lt;-setNames(c(&quot;#73C8B4&quot;, &quot;#1F78B4&quot;, &quot;#B2DF8A&quot;, &quot;#FF77F8&quot;), c(&quot;Progs&quot;, &quot;CD4T&quot;, &quot;CD8T&quot;, &quot;NK&quot;)) for(b in unique(brand)) { model = names(brand[brand == b]) highlight.sector(sector.index = model, track.index = 1, col = brand_color[b], padding = c(-0.7, 0, 0, 0), text = b, text.vjust = -0.5, niceFacing = TRUE) } dev.off() } "],["figure-7.html", "7 Figure 7 7.1 (b) UMAP by samples 7.2 (c-d) UMAP by annoL1 &amp; annoL2 7.3 (e) Alluvial diagram of relapse group 7.4 (f) Alluvial diagram of LCR group 7.5 (g-h) UMAP by stage", " 7 Figure 7 Fig.7 | Longitudinal analysis of BM compositions in t(8;21) AML patients with distinct outcomes frontline chemotherapy. a, Overview of serially collected BM aspirates from five t(8;21) AML patients. For each patient, pie charts illustrate the timing of sample collections relative to the initial diagnosis and the clinical blast count for each sample. The patients were grouped into those with relapsed disease or long-term complete remission. b, UMAP plot of all 15 t(8;21) AML longitudinal samples without batch correction. Colors represent samples collected from different time points. The red dashed box outlines the bulk of leukemic cells. c, UMAP visualization of 9 broad cell types (annoL1) from t(8;21) AML longitudinal samples. Colors indicate different cell types. Grey indicates low-quality cells. The total cell number is indicated at the bottom-left corner. d, UMAP visualization of 33 detailed cell types (annoL2) from t(8;21) AML longitudinal samples, with colors representing level 2 cell type annotations. Grey indicates low-quality cells. The total number of sequenced cells is indicated in the bottom-left corner. e, Alluvial diagram displaying the average proportions of annoL1 cell types at different times of sample collection. The average proportions of corresponding cell types of healthy BMs are shown at right. Cell types were color-coded based on annotations from panel c. f, Alluvial diagram displaying the average proportions of annoL2 cell types at different times of sample collection. The average proportions of corresponding cell types of healthy BMs are shown at right. Cell types were color-coded based on annotations from panel d. g, Top panel: UMAP facet distribution of the t(8;21) AML relapse group at initial diagnosis, complete remission, and relapse stages, with cell types color-coded based on annotations from panel d. Bottom panel: UMAP facet plots of cells expressing RUNX1::RUNX1T1 at these same stages, highlighting the distribution of fusion transcript-positive cells in the t(8;21) AML relapse group. Red dots indicate RUNX1::RUNX1T1-positive cells, while grey dots represent cells where fusion transcripts were undetected. The total number of cells at each longitudinal stage of t(8;21) AML is shown at the top-right corner. The number before the slash represents the count of RUNX1::RUNX1T1-positive cells, and the number after the slash represents the total number of cells. h, Top panel: UMAP facet distribution of the t(8;21) AML long-term complete remission group at initial diagnosis, complete remission, and long-term complete remission stages, with cell types color-coded based on annotations from panel d. Bottom panel: UMAP facet plots of cells expressing RUNX1::RUNX1T1 at these same stages, highlighting the distribution of fusion transcript-positive cells in the t(8;21) AML relapse group. Red dots indicate RUNX1::RUNX1T1-positive cells, while grey dots represent cells where fusion transcripts were undetected. The total number of cells at each longitudinal stage of t(8;21) AML is shown at the top-right corner. The number before the slash represents the count of RUNX1::RUNX1T1-positive cells, and the number after the slash represents the total number of cells. 7.1 (b) UMAP by samples my_color &lt;- c(&quot;#91B897&quot;, &quot;#FCDD8D&quot;, &quot;#E2CDDA&quot;, &quot;#AFC9C6&quot;, &quot;#E06C3E&quot;, &quot;#CDD695&quot;, &quot;#9188A4&quot;, &quot;#FBA95E&quot;, &quot;#D58E8E&quot;, &quot;#8EB052&quot;, &quot;#A6DDC2&quot;, &quot;#46A39B&quot;, &quot;#FBAD82&quot;, &quot;#DFB7A9&quot;, &quot;#D966A4&quot;) scAE.anno &lt;- read_rds(paste0(in_dir, &quot;Table1.3.scAE_anno.rds&quot;)) p2 &lt;- DimPlot(scAE.anno, reduction = &quot;umap&quot;, group.by = &quot;orig.ident&quot;, label = T, repel = T, raster = T, cols = my_color, pt.size = 0.5) pdf(paste0(out_dir, &quot;Fig1.2.1.umap_cluster_raw.pdf&quot;), width = 5.5, height = 4.5) p2 dev.off() 7.2 (c-d) UMAP by annoL1 &amp; annoL2 annoL1_color &lt;- c(&quot;#73C8B4&quot;, &quot;#FFEA00&quot;, &quot;#DBBBA9&quot;, &quot;#FF40FF&quot;, &quot;#E31A1C&quot;, &quot;#6BAED6&quot;, &quot;#A1D99B&quot;, &quot;#FDBF6F&quot;, &quot;#FB8072&quot;, &quot;#D9D9D9&quot;) annoL1_name &lt;- c(&quot;Progs&quot;, &quot;Progs_Prolif&quot;, &quot;Progs_BaEoMa&quot;, &quot;Mono1&quot;, &quot;HC_Pros&quot;, &quot;T.NK&quot;, &quot;B&quot;, &quot;Myeloid&quot;, &quot;Erythroid&quot;, &quot;LowQual&quot;) names(annoL1_color) &lt;- annoL1_name annoL2_name &lt;- c( c(&quot;Progs&quot;, &quot;Progs_Prolif&quot;, &quot;Progs_BaEoMa&quot;, &quot;Mono1&quot;), c(&quot;HSC&quot;, &quot;LMPP&quot;, &quot;CLP&quot;, &quot;EMP&quot;, &quot;GMP&quot;, &quot;BaEoMa&quot;), c(&quot;CD4Naive&quot;, &quot;CD8Naive&quot;, &quot;CD4EM&quot;, &quot;Treg&quot;, &quot;CD8EM&quot;, &quot;T_prolif&quot;, &quot;NK&quot;, &quot;MAIT&quot;), c(&quot;ProB&quot;, &quot;PreB&quot;, &quot;TransitionalB&quot;, &quot;MatureB&quot;, &quot;PlasmaB&quot;), c(&quot;Pre_DC&quot;, &quot;CD14Mono&quot;, &quot;CD16Mono&quot;, &quot;cDC&quot;, &quot;pDC&quot;, &quot;Macrophage&quot;), c(&quot;EarlyE&quot;, &quot;LateE&quot;, &quot;ProgMK&quot;, &quot;Platelet&quot;, &quot;LowQual&quot;)) annoL2_color &lt;- c( c(&quot;#73C8B4&quot;, &quot;#FFEA00&quot;, &quot;#DBBBA9&quot;, &quot;#FF40FF&quot;), c(&quot;#E31A1C&quot;, &quot;#B8D8E9&quot;, &quot;#33A02C&quot;, &quot;#B2DF8A&quot;, &quot;#1F78B4&quot;, &quot;#A65628&quot;), c(&quot;#A6CEE3&quot;, &quot;#45B4FF&quot;, &quot;#FDDAEC&quot;, &quot;#27ADAE&quot;, &quot;#FEE090&quot;, &quot;#F8766D&quot;, &quot;#BEB9FF&quot;, &quot;#1B9E77&quot;), c(&quot;#A1D99B&quot;, &quot;#D95F02&quot;, &quot;#387CF0&quot;, &quot;#73C8B4&quot;, &quot;#FF9B4F&quot;), c(&quot;#F1B6DA&quot;, &quot;#FDBF6F&quot;, &quot;#DE77AE&quot;, &quot;#AB47BC&quot;, &quot;#FF77F8&quot;, &quot;#762A83&quot;), c(&quot;#FB8072&quot;, &quot;#23C8A1&quot;, &quot;#C51B7D&quot;, &quot;#E48792&quot;, &quot;#D9D9D9&quot;)) names(annoL2_color) &lt;- annoL2_name p1 &lt;- DimPlot(scAE.anno, reduction = &quot;umap&quot;, group.by = &quot;annoL1&quot;, label = T, repel = T, raster = T, cols = annoL1_color, pt.size = 0.5) p2 &lt;- DimPlot(scAE.anno, reduction = &quot;umap&quot;, group.by = &quot;annoL2&quot;, label = T, repel = T, raster = T, cols = annoL2_color, pt.size = 0.5) pdf(paste0(out_dir, &quot;Fig1.3.1.umap_cluster_anno.pdf&quot;), width = 12, height = 4.5) p1 + p2 + p3 dev.off() 7.3 (e) Alluvial diagram of relapse group dat1 &lt;- read.xlsx(paste0(in_dir, &quot;Table3.rmLQ_scAE_anno.stat.xlsx&quot;), sheet = 4)[, 8:14] %&gt;% gather(&quot;Stage&quot;, &quot;Freq&quot;, -seurat_clusters) %&gt;% mutate(Freq = ifelse(is.na(Freq), 0, Freq), Stage = factor(Stage, levels = g_list), seurat_clusters = factor(seurat_clusters, levels = annoL1_name)) %&gt;% mutate(Group = ifelse(Stage %in% g_list[1:3], &quot;1RE&quot;, &quot;2CR&quot;)) p1 &lt;- dat1 %&gt;% ggplot(aes(x = Stage, y = Freq, fill = seurat_clusters, stratum = seurat_clusters, alluvium = seurat_clusters)) + geom_col(width = 0.6) + geom_alluvium(width = 0.6, alpha = 0.7, knot.pos = 1/3, knot.prop = T) + geom_stratum(width = 0.6, color = &quot;white&quot;, linewidth = 0.1) + facet_grid(~ Group, scales = &quot;free&quot;, space = &quot;free&quot;) + scale_fill_manual(name = &quot;annoL1&quot;, values = annoL1_color) + theme_bw() + labs(y = &quot;Proportions&quot;) + theme(legend.key.size = unit(0.4, &quot;cm&quot;)) pdf(paste0(out_dir, &quot;Fig7e.pdf&quot;), width = 3, height = 4) p1 dev.off() 7.4 (f) Alluvial diagram of LCR group dat3 &lt;- read.xlsx(paste0(in_dir, &quot;Table3.rmLQ_scAE_anno.stat.xlsx&quot;), sheet = 6)[, 8:14] %&gt;% gather(&quot;Stage&quot;, &quot;Freq&quot;, -seurat_clusters) %&gt;% mutate(Freq = ifelse(is.na(Freq), 0, Freq), Stage = factor(Stage, levels = g_list), seurat_clusters = factor(seurat_clusters, levels = annoL2_name)) %&gt;% mutate(Group = ifelse(Stage %in% g_list[1:3], &quot;1RE&quot;, &quot;2CR&quot;)) p3 &lt;- dat3 %&gt;% ggplot(aes(x = Stage, y = Freq, fill = seurat_clusters, stratum = seurat_clusters, alluvium = seurat_clusters)) + geom_col(width = 0.6) + geom_alluvium(width = 0.6, alpha = 0.7, knot.pos = 1/3, knot.prop = T) + geom_stratum(width = 0.6, color = &quot;white&quot;, linewidth = 0.01) + facet_grid(~ Group, scales = &quot;free&quot;, space = &quot;free&quot;) + scale_fill_manual(name = &quot;annoL2&quot;, values = annoL2_color) + theme_bw() + labs(y = &quot;Proportions&quot;) + theme(legend.key.size = unit(0.4, &quot;cm&quot;)) pdf(paste0(out_dir, &quot;Fig7f.pdf&quot;), width = 3, height = 4) p3 dev.off() 7.5 (g-h) UMAP by stage scAE.anno.sub &lt;- scAE.anno %&gt;% subset(annoL1 != &quot;LowQual&quot;) annoL1_color &lt;- annoL1_color[1:9] annoL2_color &lt;- annoL2_color[1:33] pdf(paste0(out_dir, &quot;Fig7g-h_1.pdf&quot;), width = 13.5, height = 8) DimPlot(scAE.anno.sub, reduction = &quot;umap&quot;, split.by = &quot;group&quot;, group.by = &quot;annoL2&quot;, cols = annoL2_color, label = F, repel = T, raster = T, pt.size = 0.5, ncol = 3) dev.off() scAE.anno.sub2 &lt;- scAE.anno.sub scAE.anno.sub2@meta.data &lt;- scAE.anno.sub2@meta.data %&gt;% mutate(fus_group = ifelse(is.na(fus_group), &quot;NA&quot;, fus_group)) pdf(paste0(out_dir, &quot;Fig7g-h_2.pdf&quot;), width = 8, height = 5.5) DimPlot(scAE.anno.sub2, reduction = &quot;umap&quot;, split.by = &quot;group&quot;, group.by = &quot;fus_group&quot;, ncol = 3, order = T, label = F, repel = T, raster = T, na.value = &quot;#E0E0E0&quot;, cols = c(&quot;Positive&quot; = &quot;#E71012&quot;, &quot;NA&quot; = &quot;#E0E0E0&quot;), pt.size = 0.5) dev.off() "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
